name: Notify Changes on Production Deploy

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  notify-changes:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up git
      run: |
        git config --global user.email "basallo17@gmail.com"
        git config --global user.name "Brayan Basallo Soto"

    - name: Check if last-deploy tag exists
      id: check_tag
      run: |
        if git rev-parse "last-deploy" >/dev/null 2>&1
        then
          echo "last-deploy tag exists."
          echo "::set-output name=exists::true"
        else
          echo "last-deploy tag does not exist. Creating it."
          echo "::set-output name=exists::false"
        fi

    - name: Get list of changes since last deploy
      id: changes
      if: steps.check_tag.outputs.exists == 'true'
      run: git log --pretty=format:"%h - %s (%an, %ad)" --date=short last-deploy..HEAD > changes.txt

    - name: Get initial commit details
      if: steps.check_tag.outputs.exists != 'true'
      run: echo "Initial deploy, no changes to list." > changes.txt

    - name: Check if changes.txt is empty
      run: |
        if [ ! -s changes.txt ]; then
          echo "No changes detected." > changes.txt
        fi

    - name: Output changes for debugging
      run: cat changes.txt

    - name: Send notification to Slack
      uses: 8398a7/action-slack@v3
      with:
        status: custom
        fields: workflow,job,commit,repo,ref,author,took
        custom_payload: |
          {
            "attachments": [
              {
                "color": "#36a64f",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "*Changes Deployed:*"
                    }
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "$(cat changes.txt)"
                    }
                  }
                ]
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Update last deploy tag
      if: success()
      run: |
        git tag -f last-deploy
        git push origin last-deploy --force
